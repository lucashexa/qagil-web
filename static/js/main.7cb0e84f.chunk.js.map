{"version":3,"sources":["assets/logo.png","assets/sign-in-background.jpg","assets/sing-up-background.jpeg","styles/global.ts","services/api.ts","hooks/auth.tsx","components/ToastContainer/Toast/styles.ts","components/ToastContainer/Toast/index.tsx","components/ToastContainer/styles.ts","components/ToastContainer/index.tsx","hooks/toast.tsx","hooks/userBackend.tsx","hooks/index.tsx","routes/Route.tsx","utils/getValidationErrors.ts","components/Tooltip/styles.ts","components/Tooltip/index.tsx","components/Input/styles.ts","components/Input/index.tsx","components/Button/styles.ts","components/Button/index.tsx","pages/SignIn/styles.ts","pages/SignIn/index.tsx","pages/SignUp/styles.ts","pages/SignUp/index.tsx","pages/EndPoints/qevent/createEvent.tsx","components/Header/styles.ts","components/Header/index.tsx","utils/backendUserInformations.ts","pages/Dashboard/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["module","exports","createGlobalStyle","apiLocal","axios","create","baseURL","apiQuser","apiQevent","apiQimage","AuthContext","createContext","AuthProvider","children","useState","token","localStorage","getItem","user","JSON","parse","data","setData","singIn","useCallback","a","email","password","post","response","setItem","stringify","singOut","removeItem","Provider","value","useAuth","context","useContext","Error","toastTypesVariations","info","css","success","error","Container","styled","animated","div","props","type","hasDescription","icons","size","Toast","message","style","removeToast","useToast","useEffect","timer","setTimeout","id","clearTimeout","description","title","onClick","ToastContainer","messages","messagesWithTransitions","useTransition","from","right","opacity","enter","leave","map","item","key","ToastContext","ToastProvider","setMessages","addToast","toast","uuid","state","filter","UserBackendContext","UserBackendProvider","userBackEnd","setUserBackEnd","useUserBackend","AppProvider","Route","isPrivate","Component","component","rest","render","location","to","pathname","getValidationErrors","err","validationErrors","inner","forEach","path","Tooltip","className","isErrored","isFocused","isFilled","Input","name","Icon","icon","inputRef","useRef","setIsFocused","setIsFilled","useField","fieldName","defaultValue","registerField","ref","current","handleInputFocus","handleInputBlur","onFocus","onBlur","color","button","shade","Button","Content","appearFromLeft","keyframes","AnimationContainer","Background","signInBackgroundImg","SignIn","formRef","handleSubmit","setErrors","schema","Yup","shape","required","validate","abortEarly","errors","getValidarionErrors","src","logoImg","alt","onSubmit","FiMail","placeholder","FiLock","href","appearFromRight","signUpBackgroundImg","SingUp","history","useHistory","min","config","headers","apikey","split","firstName","lastName","dataQuser","first_name","last_name","console","log","push","FiUser","CreateEvent","userId","setUserId","event","setEvent","firstRegister","setFirstRegister","onEditMode","setOnEditMode","fileResponse","setFileResponse","user_id","backgroundCSS","backgroundImage","url","backgroundPosition","height","width","borderRadius","backgroundSize","cursor","backgroundRepeat","inputCSS","zIndex","margin","marginTop","handleFile","e","removeImg","formData","FormData","append","target","files","dataQEvent","image_url","place","address","city","lat","lng","neighborhood","put","configImg","delete","file_name","handleEditEvent","handleDeleteEvent","maxWidth","marginBottom","onChange","display","border","justifyContent","alignItems","padding","flex","flexDirection","Header","backendUserInformations","params","get","userBack","Dashboard","then","React","formAtual","telas","createEvent","Routes","exact","SingIn","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cb0e84f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c845baef.png\";","module.exports = __webpack_public_path__ + \"static/media/sign-in-background.a86e46dd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sing-up-background.990d9793.jpeg\";","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  outline: 0;\n}\n\nbody {\n  background: #312E38;\n  color: #fff;\n  -webkit-font-smoothing: antialiased;\n}\n\nbody, input, button {\n  font-family: 'Roboto Slab', serif;\n  font-size: 16px;\n}\n\nh1, h2, h3, h4, h5, h6, strong{\n  font-weight: 500px;\n}\n\nbutton{\n  cursor: pointer;\n}\n\n`;\n","import axios from 'axios';\n\nexport const apiLocal = axios.create({\n  baseURL: 'http://localhost:3333',\n});\n\nexport const apiQuser = axios.create({\n  baseURL:\n    'https://cors-anywhere.herokuapp.com/http://54.233.125.231:8080/quser',\n});\n\nexport const apiQevent = axios.create({\n  baseURL:\n    'https://cors-anywhere.herokuapp.com/http://18.228.10.95:8080/qevent/v1/company',\n});\n\nexport const apiQimage = axios.create({\n  baseURL:\n    'https://cors-anywhere.herokuapp.com/http://18.230.144.102:8080/qimage',\n});\n","import React, { createContext, useCallback, useState, useContext } from 'react';\nimport { apiLocal } from '../services/api';\n\ninterface SingInCredentials {\n  email: string;\n  password: string;\n}\n\ninterface AuthContextData {\n  user: object;\n  singIn(credentials: SingInCredentials): Promise<void>;\n  singOut(): void;\n}\n\ninterface AuthState {\n  token: string;\n  user: object;\n}\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\n\nconst AuthProvider: React.FC = ({ children }) => {\n  const [data, setData] = useState<AuthState>(() => {\n    const token = localStorage.getItem('@QAgil:token');\n    const user = localStorage.getItem('@QAgil:user');\n\n    if (token && user) {\n      return { token, user: JSON.parse(user) };\n    }\n    return {} as AuthState;\n  });\n\n  const singIn = useCallback(async ({ email, password }) => {\n    const response = await apiLocal.post('sessions', {\n      email,\n      password,\n    });\n\n    const { token, user } = response.data;\n\n    localStorage.setItem('@QAgil:token', token);\n    localStorage.setItem('@QAgil:user', JSON.stringify(user));\n\n    setData({ token, user });\n  }, []);\n\n  const singOut = useCallback(() => {\n    localStorage.removeItem('@QAgil:token');\n    localStorage.removeItem('@QAgil:user');\n\n    setData({} as AuthState);\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user: data.user, singIn, singOut }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nfunction useAuth(): AuthContextData {\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvuder');\n  }\n\n  return context;\n}\n\nexport { AuthProvider, useAuth };\n","import styled, { css } from 'styled-components';\nimport { animated } from 'react-spring';\n\ninterface ContainerProps {\n  type?: 'success' | 'error' | 'info';\n  hasDescription: boolean;\n}\n\nconst toastTypesVariations = {\n  info: css`\n    background: #ebf8ff;\n    color: #3172b7;\n  `,\n\n  success: css`\n    background: #e6fffa;\n    color: #2e656a;\n  `,\n\n  error: css`\n    background: #fddede;\n    color: #c53030;\n  `,\n};\n\nexport const Container = styled(animated.div)<ContainerProps>`\n  width: 360px;\n\n  position: relative;\n  padding: 16px 30px 16px 16px;\n  border-radius: 10px;\n  box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.2);\n\n  display: flex;\n\n  & + div {\n    margin-top: 8px;\n  }\n\n  ${(props) => toastTypesVariations[props.type || 'info']}\n\n  > svg {\n    margin: 4px 12px 0 0;\n  }\n\n  div {\n    flex: 1;\n\n    p {\n      margin-top: 4px;\n      font-size: 14px;\n      opacity: 0.8;\n      line-height: 20px;\n    }\n  }\n\n  button {\n    position: absolute;\n    right: 16px;\n    top: 19px;\n    opacity: 0.6;\n    border: 0;\n    background: transparent;\n    color: inherit;\n  }\n\n  ${(props) =>\n    !props.hasDescription &&\n    css`\n      align-items: center;\n\n      svg {\n        margin-top: 0;\n      }\n    `}\n`;\n","import React, { useEffect } from 'react';\nimport {\n  FiAlertCircle,\n  FiCheckCircle,\n  FiInfo,\n  FiXCircle,\n} from 'react-icons/fi';\n\nimport { ToastMessage, useToast } from '../../../hooks/toast';\n\nimport { Container } from './styles';\n\ninterface ToastProps {\n  message: ToastMessage;\n  style: object;\n}\n\nconst icons = {\n  info: <FiInfo size={24} />,\n  error: <FiAlertCircle size={24} />,\n  success: <FiCheckCircle size={24} />,\n};\n\nconst Toast: React.FC<ToastProps> = ({ message, style }) => {\n  const { removeToast } = useToast();\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      removeToast(message.id);\n    }, 3000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [message.id, removeToast]);\n\n  return (\n    <Container\n      type={message.type}\n      hasDescription={!!message.description}\n      style={style}\n    >\n      {icons[message.type || 'info']}\n\n      <div>\n        <strong>{message.title}</strong>\n        {message.description && <p>{message.description}</p>}\n      </div>\n\n      <button onClick={() => removeToast(message.id)} type=\"button\">\n        <FiXCircle size={18} />\n      </button>\n    </Container>\n  );\n};\n\nexport default Toast;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: absolute;\n  right: 0;\n  top: 0;\n  padding: 30px;\n  overflow: hidden;\n`;\n","import React from 'react';\nimport { useTransition } from 'react-spring';\n\nimport Toast from './Toast';\n\nimport { ToastMessage } from '../../hooks/toast';\nimport { Container } from './styles';\n\ninterface ToastContainerProps {\n  messages: ToastMessage[];\n}\n\nconst ToastContainer: React.FC<ToastContainerProps> = ({ messages }) => {\n  const messagesWithTransitions = useTransition(\n    messages,\n    (message) => message.id,\n    {\n      from: { right: '-120%', opacity: 0 },\n      enter: { right: '0%', opacity: 1 },\n      leave: { right: '-120%', opacity: 1 },\n    },\n  );\n\n  return (\n    <Container>\n      {messagesWithTransitions.map(({ item, key, props }) => (\n        <Toast key={key} message={item} style={props} />\n      ))}\n    </Container>\n  );\n};\n\nexport default ToastContainer;\n","import React, { createContext, useContext, useCallback, useState } from 'react';\nimport { uuid } from 'uuidv4';\n\nimport ToastContainer from '../components/ToastContainer';\n\nexport interface ToastMessage {\n  id: string;\n  type?: 'success' | 'error' | 'info';\n  title: string;\n  description?: string;\n}\ninterface ToastContextData {\n  addToast(message: Omit<ToastMessage, 'id'>): void;\n  removeToast(id: string): void;\n}\n\nconst ToastContext = createContext<ToastContextData>({} as ToastContextData);\n\nconst ToastProvider: React.FC = ({ children }) => {\n  const [messages, setMessages] = useState<ToastMessage[]>([]);\n\n  const addToast = useCallback(\n    ({ type, title, description }: Omit<ToastMessage, 'id'>) => {\n      const id = uuid();\n\n      const toast = {\n        id,\n        type,\n        title,\n        description,\n      };\n\n      setMessages((state) => [...state, toast]);\n    },\n    [],\n  );\n\n  const removeToast = useCallback((id: string) => {\n    setMessages((state) => state.filter((message) => message.id !== id));\n  }, []);\n\n  return (\n    <ToastContext.Provider value={{ addToast, removeToast }}>\n      {children}\n      <ToastContainer messages={messages} />\n    </ToastContext.Provider>\n  );\n};\n\nfunction useToast(): ToastContextData {\n  const context = useContext(ToastContext);\n\n  if (!context) {\n    throw new Error('useToast must be used within a ToastProvider');\n  }\n\n  return context;\n}\n\nexport { ToastProvider, useToast };\n","import React, { createContext, useCallback, useState, useContext } from 'react';\n\ninterface UserBackendContextData {\n  userBackEnd: object | null;\n  setUserBackEnd(object: UserBackendState): void;\n}\n\nexport interface UserBackendState {\n  user: object;\n}\n\nconst UserBackendContext = createContext<UserBackendContextData>(\n  {} as UserBackendContextData,\n);\n\nconst UserBackendProvider: React.FC = ({ children }) => {\n  const [userBackEnd, setUserBackEnd] = useState<UserBackendState | null>(null);\n\n  return (\n    <UserBackendContext.Provider value={{ userBackEnd, setUserBackEnd }}>\n      {children}\n    </UserBackendContext.Provider>\n  );\n};\n\nfunction useUserBackend(): UserBackendContextData {\n  const context = useContext(UserBackendContext);\n\n  if (!context) {\n    throw new Error(\n      'useUserBackend must be used within an UserBackendProvuder',\n    );\n  }\n\n  return context;\n}\n\nexport { UserBackendProvider, useUserBackend };\n","import React from 'react';\n\nimport { AuthProvider } from './auth';\nimport { ToastProvider } from './toast';\nimport { UserBackendProvider } from './userBackend';\n\nconst AppProvider: React.FC = ({ children }) => (\n  <AuthProvider>\n    <UserBackendProvider>\n      <ToastProvider>{children}</ToastProvider>\n    </UserBackendProvider>\n  </AuthProvider>\n);\n\nexport default AppProvider;\n","import React from 'react';\nimport {\n  RouteProps as ReactDOMRouteProps,\n  Route as ReactDOMRoute,\n  Redirect,\n} from 'react-router-dom';\n\nimport { useAuth } from '../hooks/auth';\n\ninterface RouteProps extends ReactDOMRouteProps {\n  isPrivate?: boolean;\n  component: React.ComponentType;\n}\n\nconst Route: React.FC<RouteProps> = ({\n  isPrivate = false,\n  component: Component,\n  ...rest\n}) => {\n  const { user } = useAuth();\n\n  return (\n    <ReactDOMRoute\n      {...rest}\n      render={({ location }) => {\n        return isPrivate === !!user ? (\n          <Component />\n        ) : (\n          <Redirect\n            to={{\n              pathname: isPrivate ? '/' : '/dashboard',\n              state: { from: location },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport default Route;\n","import { ValidationError } from 'yup';\n\ninterface Errors {\n  [key: string]: string;\n}\n\nexport default function getValidationErrors(err: ValidationError): Errors {\n  const validationErrors: Errors = {};\n\n  err.inner.forEach((error) => {\n    validationErrors[error.path] = error.message;\n  });\n\n  return validationErrors;\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n\n  span {\n    width: 160px;\n    background: #ff9000;\n    padding: 8px;\n    border-radius: 4px;\n    font-size: 14px;\n    font-weight: 500;\n    opacity: 0;\n    transition: opacity 0.4s;\n    visibility: hidden;\n\n    position: absolute;\n    bottom: calc(100% + 12px);\n    left: 50%;\n    transform: translateX(-50%);\n\n    color: #312e38;\n\n    &::before {\n      content: '';\n      border-style: solid;\n      border-color: #ff9000 transparent;\n      border-width: 6px 6px 0 6px;\n      bottom: 20;\n      top: 100%;\n      position: absolute;\n      left: 50%;\n      transform: translateX(-50%);\n    }\n  }\n\n  &:hover span {\n    opacity: 1;\n    visibility: visible;\n  }\n`;\n","import React from 'react';\n\nimport { Container } from './styles';\n\ninterface TooltipProps {\n  title: string;\n  className?: string;\n}\n\nconst Tooltip: React.FC<TooltipProps> = ({ title, children, className }) => {\n  return (\n    <Container className={className}>\n      {children}\n      <span>{title}</span>\n    </Container>\n  );\n};\n\nexport default Tooltip;\n","import styled, { css } from 'styled-components';\n\nimport Tooltip from '../Tooltip';\n\ninterface ContainerProps {\n  isFocused: boolean;\n  isFilled: boolean;\n  isErrored: boolean;\n}\n\nexport const Container = styled.div<ContainerProps>`\n  background: #232129;\n  border-radius: 10px;\n  padding: 10px;\n  width: 100%;\n\n  border: 2px solid #232129;\n  color: #666360;\n\n  display: flex;\n  align-items: center;\n\n  & + div {\n    margin-top: 8px;\n  }\n\n\n  ${(props) =>\n    props.isErrored &&\n    css`\n      border-color: #c53030;\n    `}\n\n  ${(props) =>\n    props.isFocused &&\n    css`\n      color: #ff9000;\n      border-color: #ff9000;\n    `}\n\n  ${(props) =>\n    props.isFilled &&\n    css`\n      color: #ff9000;\n    `}\n\n  input {\n    color: #f4ede8;\n    flex: 1;\n    border: 0;\n    background: transparent;\n\n    &::placeholder {\n      color: #666360;\n    }\n  }\n\n  svg {\n    margin-right: 16px;\n  }\n`;\n\nexport const Error = styled(Tooltip)`\n  height: 20px;\n  margin-left: 16px;\n\n  svg {\n    margin: 0;\n  }\n\n  span {\n    background: #c53030;\n    color: #fff;\n\n    &::before {\n      border-color: #c53030 transparent;\n    }\n  }\n`;\n","import React, {\n  InputHTMLAttributes,\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n} from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { useField } from '@unform/core';\n\nimport { Container, Error } from './styles';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n\n    setIsFilled(!!inputRef.current?.value);\n  }, []);\n\n  return (\n    <Container isErrored={!!error} isFilled={isFilled} isFocused={isFocused}>\n      {Icon && <Icon size={20} />}\n      <input\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        defaultValue={defaultValue}\n        ref={inputRef}\n        {...rest}\n      />\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"#c53030\" size={20} />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default Input;\n","import styled from 'styled-components';\nimport { shade } from 'polished';\n\nexport const Container = styled.button`\n  background: #ff9000;\n  height: 56px;\n  border-radius: 10px;\n  border: 0;\n  color: #312e38;\n  padding: 0 16px;\n  width: 100%;\n  font-weight: 500;\n  margin-top: 16px;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background: ${shade(0.2, '#ff9000')};\n  }\n`;\n","import React, { ButtonHTMLAttributes } from 'react';\n\nimport { Container } from './styles';\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst Button: React.FC<ButtonProps> = ({ children, ...rest }) => (\n  <Container type=\"button\" {...rest}>\n    {children}\n  </Container>\n);\n\nexport default Button;\n","import styled, { keyframes } from 'styled-components';\nimport { shade } from 'polished';\n\nimport signInBackgroundImg from '../../assets/sign-in-background.jpg';\n\nexport const Container = styled.div`\n  height: 100vh;\n\n  display: flex;\n  align-items: stretch;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  max-width: 700px;\n`;\n\nconst appearFromLeft = keyframes`\n  from{\n    opacity: 0;\n    transform: translateX(-50px);\n  }\n  to{\n    opacity: 1;\n    transform: translateX(0);\n  }\n`;\n\nexport const AnimationContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  animation: ${appearFromLeft} 1s;\n\n  form {\n    margin: 80px 0;\n    width: 340px;\n    text-align: center;\n\n    h1 {\n      margin-bottom: 24px;\n    }\n\n    a {\n      color: #f4ede8;\n      display: block;\n      margin-top: 24px;\n      text-decoration: none;\n      transition: color 0.2s;\n      &:hover {\n        color: ${shade(0.2, '#f4ede8')};\n      }\n    }\n  }\n\n  > a {\n    color: #ff9000;\n    display: block;\n    margin-top: 24px;\n    text-decoration: none;\n    transition: color 0.2s;\n\n    display: flex;\n    align-items: center;\n\n    svg {\n      margin-right: 16px;\n    }\n    &:hover {\n      color: ${shade(0.2, '#ff9000')};\n    }\n  }\n`;\n\nexport const Background = styled.div`\n  flex: 1;\n  background: url(${signInBackgroundImg}) no-repeat center;\n  background-size: cover;\n`;\n","import React, { useRef, useCallback } from 'react';\nimport { FiLogIn, FiMail, FiLock } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\n\nimport { useAuth } from '../../hooks/auth';\nimport { useToast } from '../../hooks/toast';\nimport getValidarionErrors from '../../utils/getValidationErrors';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport logoImg from '../../assets/logo.png';\n\nimport { Container, Content, Background, AnimationContainer } from './styles';\n\nimport backendUserInformations from '../../utils/backendUserInformations';\n\ninterface SingInFormData {\n  email: string;\n  password: string;\n}\n\nconst SignIn: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const { singIn } = useAuth();\n  const { addToast } = useToast();\n\n  const handleSubmit = useCallback(\n    async (data: SingInFormData) => {\n      try {\n        formRef.current?.setErrors({});\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .required('Email obrigatório')\n            .email('Email Obrigatório'),\n          password: Yup.string().required('Senha obrigatória'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        await singIn({\n          email: data.email,\n          password: data.password,\n        });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidarionErrors(err);\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        addToast({\n          type: 'info',\n          title: 'erro na autenticação',\n          description: 'Ocorreu um erro ao fazer login, cheque as credenciais',\n        });\n      }\n    },\n    [singIn, addToast],\n  );\n\n  return (\n    <Container>\n      <Content>\n        <AnimationContainer>\n          <img src={logoImg} alt=\"QAgil\" />\n\n          <Form onSubmit={handleSubmit} ref={formRef}>\n            <h1>Faça Seu Logon</h1>\n\n            <Input\n              name=\"email\"\n              icon={FiMail}\n              type=\"text\"\n              placeholder=\"E-Mail\"\n            />\n            <Input\n              name=\"password\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Senha\"\n            />\n\n            <Button type=\"submit\">Entrar</Button>\n\n            <a href=\"forgot\">Esqueci minha senha</a>\n          </Form>\n\n          <Link to=\"/singup\">\n            <FiLogIn />\n            Criar Conta\n          </Link>\n        </AnimationContainer>\n      </Content>\n      <Background />\n    </Container>\n  );\n};\n\nexport default SignIn;\n","import styled, { keyframes } from 'styled-components';\nimport { shade } from 'polished';\n\nimport signUpBackgroundImg from '../../assets/sing-up-background.jpeg';\n\nexport const Container = styled.div`\n  height: 100vh;\n\n  display: flex;\n  align-items: stretch;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  max-width: 700px;\n`;\n\nconst appearFromRight = keyframes`\n  from{\n    opacity: 0;\n    transform: translateX(50px);\n  }\n  to{\n    opacity: 1;\n    transform: translateX(0);\n  }\n`;\n\nexport const AnimationContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  animation: ${appearFromRight} 1s;\n\n  form {\n    margin: 80px 0;\n    width: 340px;\n    text-align: center;\n\n    h1 {\n      margin-bottom: 24px;\n    }\n\n    a {\n      color: #f4ede8;\n      display: block;\n      margin-top: 24px;\n      text-decoration: none;\n      transition: color 0.2s;\n      &:hover {\n        color: ${shade(0.2, '#f4ede8')};\n      }\n    }\n  }\n\n  > a {\n    color: #ff9000;\n    display: block;\n    margin-top: 24px;\n    text-decoration: none;\n    transition: color 0.2s;\n\n    display: flex;\n    align-items: center;\n\n    svg {\n      margin-right: 16px;\n    }\n    &:hover {\n      color: ${shade(0.2, '#ff9000')};\n    }\n  }\n`;\n\nexport const Background = styled.div`\n  flex: 1;\n  background: url(${signUpBackgroundImg}) no-repeat center;\n  background-size: cover;\n`;\n","import React, { useCallback, useRef } from 'react';\nimport { FiArrowLeft, FiMail, FiLock, FiUser } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { apiLocal, apiQuser } from '../../services/api';\n\nimport { useToast } from '../../hooks/toast';\n\nimport getValidarionErrors from '../../utils/getValidationErrors';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport logoImg from '../../assets/logo.png';\n\nimport { Container, Content, Background, AnimationContainer } from './styles';\n\ninterface SingUpFormData {\n  name: string;\n  email: string;\n  password: string;\n}\n\nconst SingUp: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n  const history = useHistory();\n\n  const handleSubmit = useCallback(\n    async (data: SingUpFormData) => {\n      try {\n        formRef.current?.setErrors({});\n        const schema = Yup.object().shape({\n          name: Yup.string().required('Nome obrigatório'),\n          email: Yup.string()\n            .required('Email obrigatório')\n            .email('Email Obrigatório'),\n          password: Yup.string().min(6, 'No mínimo 6 digitos'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        const config = {\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            apikey: 'a6ad62eb-d6d7-4b05-85fa-d1da8c5d7c6e',\n            'Content-Type': 'application/json',\n          },\n        };\n\n        const [firstName, lastName] = data.name.split(' ');\n        const dataQuser = {\n          email: data.email,\n          first_name: firstName,\n          last_name: lastName,\n        };\n        console.log(dataQuser);\n\n        await apiQuser.post('/v1/user/create', dataQuser, config);\n        await apiLocal.post('/users', data);\n\n        history.push('/');\n\n        addToast({\n          type: 'success',\n          title: 'Cadastro realizado',\n          description: 'Vocë já pode fazer seu logon!',\n        });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidarionErrors(err);\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        addToast({\n          type: 'info',\n          title: 'erro na autenticação',\n          description: 'Ocorreu um erro ao fazer cadastro, tente novamente',\n        });\n      }\n    },\n    [addToast, history],\n  );\n\n  return (\n    <Container>\n      <Background />\n      <Content>\n        <AnimationContainer>\n          <img src={logoImg} alt=\"QAgil\" />\n\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Faça Seu Cadastro</h1>\n\n            <Input name=\"name\" icon={FiUser} type=\"text\" placeholder=\"Nome\" />\n            <Input\n              name=\"email\"\n              icon={FiMail}\n              type=\"text\"\n              placeholder=\"E-Mail\"\n            />\n            <Input\n              name=\"password\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Senha\"\n            />\n\n            <Button type=\"submit\">Cadastrar</Button>\n          </Form>\n          <Link to=\"/\">\n            <FiArrowLeft />\n            Voltar para Logon\n          </Link>\n        </AnimationContainer>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SingUp;\n","import React, { useCallback, useRef, useState } from 'react';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\n\nimport { apiQevent, apiQimage } from '../../../services/api';\n\nimport { useToast } from '../../../hooks/toast';\n\nimport getValidarionErrors from '../../../utils/getValidationErrors';\n\nimport Input from '../../../components/Input';\nimport Button from '../../../components/Button';\n\nimport { Container, Content, AnimationContainer } from '../../SignUp/styles';\n\nimport { useUserBackend } from '../../../hooks/userBackend';\nimport { getDiffieHellman } from 'crypto';\nimport { StringifyOptions } from 'querystring';\nimport { FiAlignCenter } from 'react-icons/fi';\nimport { between } from 'polished';\n\ninterface CreateEventFormData {\n  name: string;\n  description: string;\n  email: string;\n  image_url: string;\n  address: string;\n  city: string;\n  neighborhood: string;\n  state: string;\n  lat: number;\n  lng: number;\n  file: string;\n}\n\ninterface IuserBackEnd {\n  user_id: number;\n}\n\ninterface fileResponse {\n  file_name: string;\n  url: string;\n}\n\nconst CreateEvent: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n  const [userId, setUserId] = useState<number>();\n  const [event, setEvent] = useState<any>();\n  const [firstRegister, setFirstRegister] = useState<boolean>(true);\n  const [onEditMode, setOnEditMode] = useState<boolean>(true);\n  const [fileResponse, setFileResponse] = useState<fileResponse>(\n    {} as fileResponse,\n  );\n  const { userBackEnd } = useUserBackend();\n  if (userBackEnd) {\n    const { user_id } = userBackEnd as IuserBackEnd;\n    if (!userId) {\n      setUserId(user_id);\n    }\n  }\n\n  const backgroundCSS = {\n    backgroundImage: `url(\"${\n      fileResponse.url\n        ? fileResponse.url\n        : 'https://cdn5.vectorstock.com/i/thumb-large/76/79/your-logo-here-placeholder-symbol-vector-26077679.jpg'\n    } \"`,\n    backgroundPosition: 'center',\n    height: '100px',\n    width: '100px',\n    borderRadius: '50%',\n    backgroundSize: 'cover',\n    cursor: 'pointer',\n    // margin: 'auto',\n    backgroundRepeat: 'no-repeat',\n  };\n\n  const inputCSS = {\n    zIndex: -1,\n    opacity: 0,\n    height: '100px',\n    width: '100px',\n    borderRadius: '50%',\n    backgroundSize: 'cover',\n    cursor: 'pointer',\n    margin: 'auto',\n    marginTop: '10px',\n  };\n\n  const handleFile = async (e: any) => {\n    // Todo Se alterar a imagem, precisa ser excluida a antiga\n\n    if (fileResponse.url) {\n      removeImg();\n    }\n    const formData = new FormData();\n\n    formData.append('file', e.target.files[0]);\n\n    const config = {\n      headers: {\n        apikey: 'a6ad62eb-d6d7-4b05-85fa-d1da8c5d7c6e',\n        user_id: userId,\n        type: 'qagile-art-event',\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n    };\n    const response = await apiQimage.post('/v1', formData, config);\n    await setFileResponse(response.data);\n  };\n\n  const handleSubmit = async (data: CreateEventFormData) => {\n    try {\n      formRef.current?.setErrors({});\n\n      const config = {\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          apikey: 'a6ad62eb-d6d7-4b05-85fa-d1da8c5d7c6e',\n          'Content-Type': 'application/json',\n          user_id: userId,\n        },\n      };\n\n      const dataQEvent = {\n        name: data.name,\n        description: data.description,\n        email: data.email,\n        image_url: fileResponse.url,\n        place: {\n          address: '',\n          city: '',\n          location: {\n            lat: 0,\n            lng: 0,\n          },\n          neighborhood: '',\n          state: '',\n        },\n      };\n\n      if (onEditMode && !firstRegister) {\n        const response = await apiQevent.put(\n          `/${event.id}`,\n          dataQEvent,\n          config,\n        );\n        setEvent(response.data);\n        addToast({\n          type: 'success',\n          title: 'Evento editado com sucesso',\n        });\n      } else {\n        const response = await apiQevent.post('/', dataQEvent, config);\n        setEvent(response.data);\n        addToast({\n          type: 'success',\n          title: 'Evento Criado com sucesso',\n        });\n        setFirstRegister(false);\n      }\n      setOnEditMode(false);\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        const errors = getValidarionErrors(err);\n        formRef.current?.setErrors(errors);\n\n        return;\n      }\n\n      addToast({\n        type: 'info',\n        title: 'erro na autenticação',\n        description: 'Ocorreu um erro ao fazer cadastro, tente novamente',\n      });\n    }\n  };\n\n  const handleRemoveImage = async () => {\n    await removeImg();\n    setFileResponse({} as fileResponse);\n  };\n\n  const removeImg = async () => {\n    const configImg = {\n      headers: {\n        apikey: 'a6ad62eb-d6d7-4b05-85fa-d1da8c5d7c6e',\n        user_id: userId,\n        type: 'qagile-art-event',\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n    };\n\n    await apiQimage.delete(`/v1/${fileResponse.file_name}`, configImg);\n\n    if (event) {\n      const config = {\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          apikey: 'a6ad62eb-d6d7-4b05-85fa-d1da8c5d7c6e',\n          'Content-Type': 'application/json',\n          user_id: userId,\n        },\n      };\n      const dataQEvent = {\n        image_url: '',\n      };\n      const response = await apiQevent.put(`/${event.id}`, dataQEvent, config);\n\n      console.log(response);\n    } else {\n      console.log('nao entrei');\n    }\n  };\n\n  const handleEditEvent = async () => {\n    setOnEditMode(true);\n  };\n\n  const handleDeleteEvent = async () => {\n    try {\n      formRef.current?.setErrors({});\n\n      const config = {\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          apikey: 'a6ad62eb-d6d7-4b05-85fa-d1da8c5d7c6e',\n          'Content-Type': 'application/json',\n          user_id: userId,\n        },\n      };\n\n      const response = await apiQevent.delete(`/${event.id}`, config);\n\n      console.log(response.data);\n\n      setFileResponse({} as fileResponse);\n\n      addToast({\n        type: 'success',\n        title: 'Evento deletado com sucesso',\n      });\n\n      setEvent(null);\n      removeImg();\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        const errors = getValidarionErrors(err);\n        formRef.current?.setErrors(errors);\n\n        return;\n      }\n\n      addToast({\n        type: 'info',\n        title: 'erro na autenticação',\n        description: 'Ocorreu um erro ao fazer cadastro, tente novamente',\n      });\n    }\n  };\n\n  return (\n    <>\n      {!event || onEditMode ? (\n        //edit mode\n        <Container>\n          <Content>\n            <AnimationContainer>\n              <Form ref={formRef} onSubmit={handleSubmit}>\n                <h1>Evento</h1>\n\n                <div\n                  style={{\n                    margin: 'auto',\n                    maxWidth: '100px',\n                    marginBottom: '20px',\n                  }}\n                >\n                  <div style={backgroundCSS}>\n                    <input\n                      style={inputCSS}\n                      name=\"file\"\n                      type=\"file\"\n                      onChange={(e) => handleFile(e)}\n                    />\n                  </div>\n                </div>\n                <Input name=\"name\" type=\"text\" placeholder=\"Nome\" />\n                <Input name=\"description\" type=\"text\" placeholder=\"Descrição\" />\n                <Input name=\"email\" type=\"text\" placeholder=\"E-Mail\" />\n\n                <Button type=\"submit\">\n                  {onEditMode && !firstRegister ? 'Editar' : 'Criar'} Evento\n                </Button>\n                {onEditMode && !firstRegister && (\n                  <Button type=\"button\" onClick={() => setOnEditMode(false)}>\n                    {' '}\n                    Cancelar Edição{' '}\n                  </Button>\n                )}\n              </Form>\n            </AnimationContainer>\n          </Content>\n        </Container>\n      ) : (\n        //card mode\n        <Container>\n          <Content>\n            <AnimationContainer>\n              {/* <h1>Informações do evento do(a) {event.name} </h1> */}\n              <div\n                style={{\n                  display: 'flex',\n                  marginTop: '20px',\n                  border: '2px solid #ff9000',\n                  borderRadius: '10px',\n                  width: '400px',\n                  justifyContent: 'space-around',\n                  alignItems: 'center',\n                  padding: '10px',\n                  flex: 1,\n                }}\n              >\n                <div style={backgroundCSS}>\n                  <input\n                    style={inputCSS}\n                    name=\"file\"\n                    type=\"file\"\n                    onChange={(e) => handleFile(e)}\n                  />\n                </div>\n\n                {/* <button onClick={handleRemoveImage}> remove image</button> */}\n                <div style={{ display: 'flex', flexDirection: 'column' }}>\n                  <span>{event.description}</span>\n                  <span>{event.email}</span>\n                </div>\n              </div>\n              <Button type={'button'} onClick={handleEditEvent}>\n                {' '}\n                Editar Evento{' '}\n              </Button>\n              <Button type={'button'} onClick={handleDeleteEvent}>\n                {' '}\n                excluir evento{' '}\n              </Button>\n            </AnimationContainer>\n          </Content>\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default CreateEvent;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  flex: 1;\n  background-color: #28272e;\n  height: 100px;\n  display: flex;\n  align-items: center;\n\n  img {\n    width: 220px;\n  }\n`;\n","import React from 'react';\nimport logoImg from '../../assets/logo.png';\n\nimport { Container } from './styles';\n\nconst Header: React.FC = () => {\n  return (\n    <Container>\n      <img src={logoImg} alt=\"QAgil\" />\n    </Container>\n  );\n};\n\nexport default Header;\n","import { apiQuser } from '../services/api';\nimport { useUserBackend } from '../hooks/userBackend';\n\nconst backendUserInformations = async (email: any) => {\n  const config = {\n    headers: {\n      apikey: 'a6ad62eb-d6d7-4b05-85fa-d1da8c5d7c6e',\n      'Content-Type': 'application/json',\n    },\n    params: {\n      email,\n    },\n  };\n\n  const userBack = await apiQuser.get('/v1/user/search', config);\n  return userBack;\n};\n\nexport default backendUserInformations;\n","import React, { useEffect } from 'react';\nimport CreateEvent from '../EndPoints/qevent/createEvent';\nimport Header from '../../components/Header';\nimport UpdateEvent from '../EndPoints/qevent/updateEvent';\nimport CreateUserEvent from '../EndPoints/qevent/createUserEvent';\nimport RemoveEvent from '../EndPoints/qevent/deleteEvent';\n\nimport CreateUserEventUser from '../EndPoints/quser/createUserEvent';\nimport GetSeatchUser from '../EndPoints/quser/getSearchUser';\nimport GetUserEvent from '../EndPoints/quser/getUserEvent';\nimport UpdateEventUser from '../EndPoints/quser/updateEvent';\n\nimport CreateImage from '../EndPoints/qimage/createImage';\nimport DeleteImage from '../EndPoints/qimage/deleteImage';\n\nimport { List } from './styles';\n\nimport { useAuth } from '../../hooks/auth';\nimport { useUserBackend } from '../../hooks/userBackend';\n\nimport backendUserInformations from '../../utils/backendUserInformations';\n\nconst Dashboard: React.FC = () => {\n  const { userBackEnd, setUserBackEnd } = useUserBackend();\n  const { user } = useAuth();\n\n  if (!userBackEnd) {\n    const { email } = user as { email: string };\n    backendUserInformations(email).then((response) => {\n      console.log(response.data);\n      setUserBackEnd(response.data);\n    });\n  }\n\n  const [formAtual, setFormAtual] = React.useState('createEvent');\n  const telas: { [key: string]: any } = {\n    createEvent: <CreateEvent />,\n    // updateEvent: <UpdateEvent />,\n    // createUserEvent: <CreateUserEvent />,\n    // removeEvent: <RemoveEvent />,\n\n    // createUserEventUser: <CreateUserEventUser />,\n    // getSearchUser: <GetSeatchUser />,\n    // getUserEvent: <GetUserEvent />,\n    // updateEventUser: <UpdateEventUser />,\n\n    // createImage: <CreateImage />,\n    // deleteImage: <DeleteImage />,\n  };\n\n  return (\n    <>\n      <Header />\n      {telas[formAtual]}\n      {/*\n      <List>\n        <div>\n          <h1>Event Services</h1>\n          <span onClick={() => setFormAtual('createEvent')}>\n            Create Event\n          </span>{' '}\n          <br />\n          <span onClick={() => setFormAtual('updateEvent')}>\n            Update Event\n          </span>{' '}\n          <br />\n          <span onClick={() => setFormAtual('removeEvent')}>\n            Delete Event\n          </span>{' '}\n          <br />\n          <span onClick={() => setFormAtual('createUserEvent')}>\n            Create User Event\n          </span>{' '}\n          <br />\n        </div>\n\n        <div>\n          <h1>User Services</h1>\n          <span onClick={() => setFormAtual('createUserEventUser')}>\n            createUserEventUser\n          </span>{' '}\n          <br />\n          <span onClick={() => setFormAtual('getSearchUser')}>\n            getSearchUser\n          </span>{' '}\n          <br />\n          <span onClick={() => setFormAtual('getUserEvent')}>\n            getUserEvent\n          </span>{' '}\n          <br />\n          <span onClick={() => setFormAtual('updateEventUser')}>\n            updateEventUser\n          </span>{' '}\n          <br />\n        </div>\n\n        <div>\n          <h1>Image Services</h1>\n          <span onClick={() => setFormAtual('createImage')}>\n            createImage\n          </span>{' '}\n          <br />\n          <span onClick={() => setFormAtual('deleteImage')}>\n            deleteImage\n          </span>{' '}\n          <br />\n        </div>\n      </List> */}\n    </>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\n\nimport Route from './Route';\n\nimport SingIn from '../pages/SignIn';\nimport SingUp from '../pages/SignUp';\n\nimport Dashboard from '../pages/Dashboard';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/\" exact component={SingIn} />\n    <Route path=\"/singup\" component={SingUp} />\n\n    <Route path=\"/dashboard\" component={Dashboard} isPrivate />\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport GlobalStyle from './styles/global';\n\nimport AppProvider from './hooks';\n\nimport Routes from './routes';\n\nconst App: React.FC = () => (\n  <Router>\n    <AppProvider>\n      <Routes />\n    </AppProvider>\n\n    <GlobalStyle />\n  </Router>\n);\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}